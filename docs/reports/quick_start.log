Traceback (most recent call last):
  File "/Users/bakezq/opt/miniconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/bakezq/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/bakezq/opt/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/bakezq/opt/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/bakezq/opt/miniconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/bakezq/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/Users/bakezq/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/bakezq/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import sys

import matplotlib.image as mpimg
import matplotlib.pyplot as plt

sys.path.insert(0, '../../')
from pyflow import *


@task
def add(self, num):  # self is optional
    return num + 1


@task
def multiply(num1, num2):
    return num1 * num2


@shell
def write(num):
    """echo {num} > 1.txt"""
    return '*.txt'


@task
def read(f: File):
    return open(str(f)).readlines()


@flow
def sub_flow(num):
    return add(num) | map_(lambda x: x ** 2) | add


@flow
def my_flow(num):
    [sub_flow(num), sub_flow(num)] | multiply \
    | write | read | flatten \
    | map_(lambda x: int(x.strip())) \
    | view


config.update({
    'cpu': 8,
    Task: {
        'executor': 'local'  # for test, use simple one
    }
})

# set input
num_ch = Channel.values(1, 2, 3)
# resolve dependencies
runner, workflow = FlowRunner(my_flow).run(num=num_ch)
# now can generate dag
workflow.graph.render('workflow', view=False, format='png', cleanup=True)
# truly run the flow
await runner.aexecute()

# visualize the flow

img = mpimg.imread('workflow.png')
imgplot = plt.imshow(img)
plt.show(block=False)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
[0;32m<ipython-input-1-863d89232d40>[0m in [0;36m<module>[0;34m[0m
[1;32m     56[0m [0mworkflow[0m[0;34m.[0m[0mgraph[0m[0;34m.[0m[0mrender[0m[0;34m([0m[0;34m'workflow'[0m[0;34m,[0m [0mview[0m[0;34m=[0m[0;32mFalse[0m[0;34m,[0m [0mformat[0m[0;34m=[0m[0;34m'png'[0m[0;34m,[0m [0mcleanup[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     57[0m [0;31m# truly run the flow[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 58[0;31m [0;32mawait[0m [0mrunner[0m[0;34m.[0m[0maexecute[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     59[0m [0;34m[0m[0m
[1;32m     60[0m [0;31m# visualize the flow[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;31mAttributeError[0m: 'FlowRunner' object has no attribute 'aexecute'
AttributeError: 'FlowRunner' object has no attribute 'aexecute'

